version: '3'
services:
  db:
    container_name: db
    image: postgres:13
    volumes:
      - db-volume:/var/lib/postgresql/data/
    env_file:
      - app/config/.env
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d movies_database"]
      interval: 10s
      timeout: 5s
      retries: 5

  django:
    container_name: django
    build: ./app
    volumes:
      - static-volume:/opt/app/static/
      - media-volume:/opt/app/media
    expose:
      - "8000"
    env_file:
      - app/config/.env
    depends_on:
      db:
        condition: service_healthy

  nginx:
    container_name: nginx
    image: nginx:1.25.3
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
      - static-volume:/data/static:ro
    depends_on:
      - django
    ports:
      - "8000:8000"

  elastic:
    container_name: elastic
    image: elasticsearch:8.6.2
    volumes:
      - es-volume:/usr/share/elasticsearch/data
    expose:
      - "9200"
    ports:
      - "9200:9200"
    environment:
      - "ES_JAVA_OPTS=-Xms200m -Xmx200m"
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s" ]
      interval: 10s
      timeout: 5s
      retries: 3

  create_es_index:
    image: appropriate/curl
    command: ["curl", "-s", "-XPUT", "http://elastic:9200/movies", "-H", "Content-Type: application/json", "--data-binary", "@/movies_schema.json"]
    volumes:
      - ./etl/movies_schema.json:/movies_schema.json
    depends_on:
      elastic:
        condition: service_healthy


volumes:
  db-volume:
  static-volume:
  media-volume:
  es-volume:

